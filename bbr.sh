#!/bin/bash

# ========================
# 常量定义
# ========================
declare -A SYSCTL_SETTINGS=(
    ["net.ipv4.tcp_rmem"]="4096 87380 6291456"
    ["net.ipv4.tcp_wmem"]="4096 87380 6291456"
    ["net.core.rmem_max"]=16777216
    ["net.core.wmem_max"]=16777216
    ["net.ipv4.tcp_fin_timeout"]=30
    ["net.ipv4.tcp_tw_reuse"]=1
)

PERSISTENT_CONF=(
    "net.core.default_qdisc=fq"
    "net.ipv4.tcp_congestion_control=bbr"
)

CONFIG_FILE="/etc/sysctl.d/99-bbr.conf"  # 更安全的独立配置文件

# ========================
# 工具函数
# ========================
die() {
    printf "\033[31m错误：%s\033[0m\n" "$*" >&2
    exit 1
}

check_command() {
    if ! command -v "$1" >/dev/null 2>&1; then
        die "未找到必需命令：$1 (可尝试安装包: ${2:-unknown})"
    fi
}

check_root() {
    [ "$(id -u)" -eq 0 ] || die "该脚本必须以 root 用户运行"
}

validate_setting() {
    local actual expected
    actual=$(sysctl -n "$1" 2>/dev/null | tr -d '\t ')
    expected=$(echo "${2//[[:space:]]/}" | tr -d '\t ')
    
    [ "$actual" = "$expected" ] || die "$1 设置失败 (当前值: ${actual}, 期望值: ${expected})"
}

# ========================
# 主逻辑
# ========================
main() {
    # 预处理：移除Windows换行符
    sed -i 's/\r$//' "$0"

    # 预检条件验证
    check_root
    check_command sysctl procps   # procps包提供sysctl
    check_command modprobe kmod   # kmod包提供modprobe
    check_command grep grep

    # 内核版本检查（BBR需要≥4.9）
    local kernel_ver
    kernel_ver=$(uname -r | awk -F. '{ printf("%d%02d", $1,$2) }')
    [ "$kernel_ver" -ge 409 ] || die "需要内核版本≥4.9 (当前: $(uname -r))"

    # TCP窗口缩放检查
    local tcp_window_scaling
    tcp_window_scaling=$(sysctl -n net.ipv4.tcp_window_scaling 2>/dev/null)
    printf "TCP窗口缩放状态："
    [ "$tcp_window_scaling" -eq 1 ] && echo "已启用" || echo "未启用 (当前值: ${tcp_window_scaling})"

    # 批量设置并验证sysctl参数
    for key in "${!SYSCTL_SETTINGS[@]}"; do
        sysctl -w "$key=${SYSCTL_SETTINGS[$key]}" >/dev/null
        validate_setting "$key" "${SYSCTL_SETTINGS[$key]}"
    done

    # BBR模块处理
    if ! grep -qw '^tcp_bbr' /proc/modules; then
        echo "加载BBR模块..."
        if ! modprobe tcp_bbr 2>/dev/null; then
            die "BBR模块加载失败 (可能需要升级内核)"
        fi
    else
        echo "BBR模块已加载"
    fi

    # 持久化配置（使用独立文件）
    echo "# Generated by $(basename "$0") at $(date)" > "$CONFIG_FILE"
    for line in "${PERSISTENT_CONF[@]}"; do
        echo "$line" >> "$CONFIG_FILE"
    done
    sysctl -p "$CONFIG_FILE" || die "持久化配置失败"

    # 输出验证
    printf "\n\033[32m所有设置已成功应用！当前关键参数：\033[0m\n"
    sysctl -a 2>/dev/null | grep -E \
        'net.ipv4.tcp_(rmem|wmem|fin_timeout|tw_reuse)|net.core.(rmem_max|wmem_max|default_qdisc)|tcp_congestion_control'
}

main "$@"
